{"ast":null,"code":"var _jsxFileName = \"/home/print_ana/Documentos/SocialMedia-dogs/src/UserContext.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserContext = /*#__PURE__*/React.createContext();\nexport const UserStorage = ({\n  children\n}) => {\n  _s();\n\n  const [data, setData] = React.useState(null);\n  const [login, setLogin] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n  React.useEffect(() => {\n    async function autoLogin() {\n      const token = window.localStorage.getItem('token');\n\n      if (token) {\n        const {\n          url,\n          options\n        } = TOKEN_VALIDATE_POST(token);\n        const response = fetch(url, options);\n      }\n    }\n\n    autoLogin();\n  }, []);\n\n  async function getUser(token) {\n    const {\n      url,\n      options\n    } = USER_GET(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n    setLogin(true);\n  }\n\n  async function userLogin(username, password) {\n    const {\n      url,\n      options\n    } = TOKEN_POST({\n      username,\n      password\n    });\n    const tokenRes = await fetch(url, options);\n    const {\n      token\n    } = await tokenRes.json();\n    window.localStorage.setItem(\"token\", token);\n    getUser(token);\n  }\n\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      userLogin,\n      data\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserStorage, \"NHMr3XOzL6jITljqLR2tSo1BMyY=\");\n\n_c = UserStorage;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserStorage\");","map":{"version":3,"sources":["/home/print_ana/Documentos/SocialMedia-dogs/src/UserContext.js"],"names":["React","TOKEN_POST","TOKEN_VALIDATE_POST","USER_GET","UserContext","createContext","UserStorage","children","data","setData","useState","login","setLogin","loading","setLoading","error","setError","useEffect","autoLogin","token","window","localStorage","getItem","url","options","response","fetch","getUser","json","userLogin","username","password","tokenRes","setItem"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,QAA1C,QAA0D,OAA1D;;AAEA,OAAO,MAAMC,WAAW,gBAAGJ,KAAK,CAACK,aAAN,EAApB;AAEP,OAAO,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AAC3C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACU,QAAN,CAAe,IAAf,CAAxB;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBZ,KAAK,CAACU,QAAN,CAAe,IAAf,CAA1B;AACA,QAAM,CAACG,OAAD,EAAUC,UAAV,IAAwBd,KAAK,CAACU,QAAN,CAAe,KAAf,CAA9B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBhB,KAAK,CAACU,QAAN,CAAe,IAAf,CAA1B;AAEFV,EAAAA,KAAK,CAACiB,SAAN,CAAgB,MAAM;AACpB,mBAAeC,SAAf,GAA2B;AACzB,YAAMC,KAAK,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CAAd;;AACA,UAAIH,KAAJ,EAAW;AACT,cAAM;AAACI,UAAAA,GAAD;AAAMC,UAAAA;AAAN,YAAiBtB,mBAAmB,CAACiB,KAAD,CAA1C;AACA,cAAMM,QAAQ,GAAGC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAAtB;AAED;AACF;;AACDN,IAAAA,SAAS;AACV,GAVD,EAUG,EAVH;;AAYE,iBAAeS,OAAf,CAAuBR,KAAvB,EAA8B;AAC5B,UAAM;AAAEI,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBrB,QAAQ,CAACgB,KAAD,CAAjC;AACA,UAAMM,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAMI,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAT,EAAnB;AACAnB,IAAAA,OAAO,CAACmB,IAAD,CAAP;AACAhB,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACD;;AAED,iBAAeiB,SAAf,CAAyBC,QAAzB,EAAmCC,QAAnC,EAA6C;AAC3C,UAAM;AAAER,MAAAA,GAAF;AAAOC,MAAAA;AAAP,QAAmBvB,UAAU,CAAC;AAAE6B,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAD,CAAnC;AACA,UAAMC,QAAQ,GAAG,MAAMN,KAAK,CAACH,GAAD,EAAMC,OAAN,CAA5B;AACA,UAAM;AAAEL,MAAAA;AAAF,QAAY,MAAMa,QAAQ,CAACJ,IAAT,EAAxB;AACAR,IAAAA,MAAM,CAACC,YAAP,CAAoBY,OAApB,CAA4B,OAA5B,EAAqCd,KAArC;AACAQ,IAAAA,OAAO,CAACR,KAAD,CAAP;AACD;;AAED,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEU,MAAAA,SAAF;AAAarB,MAAAA;AAAb,KAA7B;AAAA,cACGD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAvCM;;GAAMD,W;;KAAAA,W","sourcesContent":["import React from \"react\";\nimport { TOKEN_POST, TOKEN_VALIDATE_POST, USER_GET } from \"./api\";\n\nexport const UserContext = React.createContext();\n\nexport const UserStorage = ({ children }) => {\n  const [data, setData] = React.useState(null);\n  const [login, setLogin] = React.useState(null);\n  const [loading, setLoading] = React.useState(false);\n  const [error, setError] = React.useState(null);\n\nReact.useEffect(() => {\n  async function autoLogin() {\n    const token = window.localStorage.getItem('token');\n    if (token) {\n      const {url, options} = TOKEN_VALIDATE_POST(token);\n      const response = fetch(url, options);\n      \n    }\n  }\n  autoLogin();\n}, []);\n\n  async function getUser(token) {\n    const { url, options } = USER_GET(token);\n    const response = await fetch(url, options);\n    const json = await response.json();\n    setData(json);\n    setLogin(true);\n  }\n\n  async function userLogin(username, password) {\n    const { url, options } = TOKEN_POST({ username, password });\n    const tokenRes = await fetch(url, options);\n    const { token } = await tokenRes.json();\n    window.localStorage.setItem(\"token\", token);\n    getUser(token);\n  }\n\n  return (\n    <UserContext.Provider value={{ userLogin, data }}>\n      {children}\n    </UserContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}